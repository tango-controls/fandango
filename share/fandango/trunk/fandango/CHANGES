November 2011 - 9.00 : LIMITED COMPATIBILITY WITH PREVIOUS RELEASES
------------------------------------------------------------------
Changes by Tiago: dynamic/objects/dicts: compatible with Tango 7.2.2. Staticmethod decorators removed from Dynamic calls as they are no longer needed; now any decorator has to be wrapped in order to be recognized. Single-line method declaration with decorators is no longer allowed (may affect DynamicCommands?).
This change is no backwards compatible, so an "if PyTango.__version__ ..." has been added to enable/disable USE_STATIC_METHODS in fandango.dynamic module
dynamic: get_DynDS_properties and __init__ refactored to load default values also for class properties and do a better parsing of property types.
dynamic: improved logging and comments parsing in dyn_attr
dynamic: locks added to check_state to avoid recursive calls from DynamicStates evaluation
device: bug solved when dictionaries in TangoEval are empty
qt: patched an error in QCustomTabWidget
qt: added DictToolBar and QGridTable classes
servers: solved a bug in load_from_servers_list() method
tango: added methods to manage attribute labels

October 2011 - 8.28
-------------------
__init__: default imports reduced
dynamic: Modified get_DynDS_properties to respect Default values assigned in subclasses
dynamic: Using taurus instead of Tau for XAttr calls
dynamic: set_state forces push_event(State) if UseEvents is enabled
log: shortstr patched
TangoEval: proxy timeout reduced to 2 seconds
Qt: Added QCustomPushButton and QCustomTab classes for having extendend StackWidgets.
qt: Added TauFakeEventReceiver class
servers: removed Tau dependency

September 2011 - 8.27
----------------------
Event configuration check refactored to allow trending of attributes
tango: added methods for searching attribute in multiple hosts.
dynamic: added full parsing of all attributes and LogLevel
log: added .getLogLevel(alias=None) method
dynamic: refactoring of getDynDS Properties and logging.

August 2011 - 8.26
-------------------

tango: generic tango methods moved from fandango.device to fandango.tango module
Dynamic: UseEvent property bug solved, added try/except in check_changed_event to prevent errors in read attribute with PyTango releases that does not support events.
threads: added CronTab class to manage task schedule
device: TangoEval.parse_variables modified to get devices not running when using FIND(...); parsing of $(_locals) added
tango: now able to find devices in multiple hosts.


August 2011 - 8.25
-------------------
 dynamic: 
static methods links for dyn_attr/read_dyn_attr/write_dyn_attr reviewed
LOCALS added to _locals, TangoCommand with feedback added to COMM macro (getXCommand).
Added UseEvents property and push_event triggered by attribute event config and/or XAttr calls.
DynamicQualities improved and moved from read_dyn_attr to dyn_attr and evalAttr methods.
Check_State machine improved to push events if State in UseEvents list.

 device:
TangoCommand bugs solved to be usable with callables in DynamicDS.DynamicCommands
added undo_property to restore old property values

 linos:
added methods for copying and making diff of directories

July 2011 - 8.24
-----------------------------------------

Changes in modules: 
init: 
device,web,threads modules added to all 

 callbacks: 
All Event/Device management lists changed into protected 
AsynchronousFunction class moved to threads module 

 device: 
able to switch between Tau and Taurus 
Dev4Tango capable of reading dynamic attributes from other devices within the same server. 
added TangoCommand class for managing Tango commands with feedback. 

 dynamic: 
assigning default property values in DynamicDS init 
KeepAttributes, KeepTime, CheckDependencies refactored 

 log: 
to avoid duplicity of traces with Tau logging the default output (logging or print) can be set using init(use_print=bool) argument. It is set as True by default. 

 objects: 
Pool class moved to threads module 

 qt: 
DoubleClickable decorator added 
TangoHostChooser added 

 threads: 
SingletonWorker, Pool and AsynchronousFunction classes added 

 servers: 
Added logger argument to ServersDict()

KeepTime / KeepAttributes / CheckDependencies properties
--------------------------------------------------------

The values of dynamic attributes will be kept in *dyn_values* dictionary if **KeepAttributes** is equal to '*', 'yes' or 'true'; or if the attribute name appears in the property.

For each **read_dyn_attr(Attribute)** call the values will not be recalculated if interval between read_attribute calls is < **KeepTime** (1s by default).

**ChekDependencies** (True by default) will force a check of which attributes are accessed in other's formulas, creating an index for each attribute with its pre-requisites for evaluation (which will be automatically assigned to be kept). At each *read_dyn_attr* execution the dependency values will be added to *_locals*, and a *read_dyn_attr(dependency)* may be forced if its values are older than **KeepTime**.


10th May 2011 - 8.23
-----------------------------------------
device: cast_tango_type method added to parse tango types to python 
cast_tango_type method added to parse tango types to python 
dynamic: KeepTime property to DynamicDS, values will not be recalculated if interval between read_attribute calls is < KeepTime
functional: added terminate argument to regexp-related methods
qt: fireEvent renamed to handleEvent
servers: solved bug when loading lists of patterns, improved get_device_server method to avoid timeouts with unexported devices
dicts: solved bug in ThreadDict.__init__ (dict.update not called)
dicts: ThreadsDict get/set_item methods now lock only during dict update, not while read/write_methods are called; it solves timeout issues
dynamic: read_attr_hardware commented (unused), polling report format improved

17th March 2011 - 8.22
-----------------------------------------
db: Added method to get table sizes
dynamic: solved bug in updateDynamicAttributes
dynamic: added KeptTime property to be used in read_dyn_attr: by default no re-evals will be faster than 1 second.
fun: bug solved in time to date
log: bug solved in setLogLevel



10th March 2011
-----------------------------------------
Updates in device and servers modules to enable multi-host TangoEval calls.
dynamic: Added DynamicSpectrumSize class property
dynamic: improved search for dependencies and property parsing
log: log levels case independent
device: Bug solved in get_matching_device_attributes()

2nd March 2011
-------------------------------------------

qt: added TauColorComponent classes
objects: improved text representation of Structs
linos: added get_cpu method
fun: regular expression methods improved
bug solved in @Catched decorator
device: ProxiesDict now supports AttributeProxies
device: TangoEval supports attributes from multiple hosts
dynamic: get_DynDS_properties modified to be more efficient
dynamic: regexp bug solved in DynamicDS.get_quality_for_attribute
functional: bug solved in imports
device: added more tango database methods

PyTango_utils 10 December 2010
-------------------------------------------
dicts: added CaselessList
dynamic: dependencies checked using regexps
functional: added str casting in regular expression conversion; bug solved in isString method
qt: added a 'thinking' cursor behaviour, added a .wait(sleep) to main thread in the run() method
objects: added namedtuple


PyTango_utils 1st December 2010
-------------------------------------------
dynamic: WATTR added for writing external attributes
dynamic: Added XDEV=getXDevice to access DeviceProxies from dynamic attributes
dynamic: evalAttr replaced by evalState inside evaluateFormula (no dependencies check, no Write access)
dynamic: DynamicStatus property parsing added
dynamic: Tango states added as eval variables

device: Dev4Tango update_attributes changed to be more efficient checking attributes from same server
device: Added/improved methods to access Tango database

objects: Added Pool ; a class for managing queued-threaded tasks


PyTango_utils 9th November 2010
-------------------------------------------
device: Added methods to access device info/host
dynamic: Added property to disable dependencies check between attributes.
functional: added isGenerator method
ThreadDict improved

PyTango_utils bliss-8.15, 3rd november 2010
-------------------------------------------
 * timeout added to check_attribute
 * DevChild kept as Dev4Tango alias
 * poll period added as ThreadDict.append

PyTango_utils bliss-8.14, 18th october 2010
-------------------------------------------
device:
 * Dev4Tango modified to be able to manage internal polling
 * Fake attribute/event objects improved
 * Added event-like access to internal device objects within a server and its attributes and commands
 * DevChild class commented from the module as it will be replaced by Dev4Tango
dicts/objects:
 * self_locked decorator moved from dicts to objects module
dynamic:
 * self_locked decorator added to always_executed_hoot, read_dyn_attr and write_dyn_attr methods
servers:
 * bug solved in get_device_list method


PyTango_utils bliss-8.13, 13th october 2010
-----------------------------
servers:
 * Start/Stop of servers improved, checking running status to ignore/kill processes if needed.
dynamic:
* Added tau event subscription for XAttr
* polling_report moved to its own method
log:
* bug solved in level aliases
qt:
* TauEmitter.next is now public
* if self.method is None, methods are taken from queue

PyTango_utils bliss-8.12, 16 Sept 2010
-------------------------------------

arrays.py: Added offset argument to CSVArray creator
device.py: Better parsing of get_matching_devices/get_all_devices arguments
dynamic.py: Added DevState type to dynamic attributes
dynamic.py: Added default argument to getXAttr to manage return types for exceptions and empty arrays
functional.py: isSequence, toList, and join methods prepared to work with arrays and generators.
linos.py: whole file refactored, added methods for getting PID and memory usage of processes using /proc/
servers.py: Now start/stop_servers w/out argument will start/stop all servers

PyTango_utils bliss-8.11, 7 Sept 2010
-------------------------------------

Changes on fandango modules:

 * device: ProxiesDict and attribute search methods added to device
 * dicts: SortedDict added in dicts
 * dynamic: PYMEMCHECK var added to enable heapy debugging in DynamicDS classes
 * except: trial(...) added for lambdable try...except
 * linos: timeout added to ping commands
 * log: filtering  '\r' characters in logs
 * objects: tuple lists added as Struct argument
 * servers: methods for attribute/device matching moved to device module.
 * web: added color tags